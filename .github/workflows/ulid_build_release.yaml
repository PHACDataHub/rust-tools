name: ULID Tool Build and Release

on:
  pull_request_target:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'refs/heads/main'  # Ensures the main branch is checked out after merge

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build and Test ULID Tool
        run: |
          cd tools/ulid
          cargo build --release --verbose
          cargo test --verbose

      - name: Archive Binary
        run: |
          cd tools/ulid/target/release
          zip ulid-${{ github.run_number }}.zip ulid

      - name: Create Release
        id: create_release  # Ensure this ID is set correctly
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ulid-v${{ github.run_number }}
          release_name: ULID Release ${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # Use the output from the create-release step
          asset_path: ./tools/ulid/target/release/ulid-${{ github.run_number }}.zip
          asset_name: ulid-${{ github.run_number }}.zip
          asset_content_type: application/zip
